import bullets.TwentyTwo
import revolver.Revolver

fun main() {
  fun printDrum(revolver: Revolver<*>, structName: String = "RevolverDrum<TwentyTwo>") {
    println("Structure: $structName")
    println("Objects: $revolver")
    println("Pointer: ${revolver.getCurrentCartridge()}\n")
  }

  println("1. Adding elements")
  val revolver = Revolver<TwentyTwo>()
  revolver.load(TwentyTwo())
  revolver.load(TwentyTwo())
  revolver.load(TwentyTwo())
  revolver.load(TwentyTwo())
  revolver.load(TwentyTwo())
  revolver.load(TwentyTwo())
  printDrum(revolver)
  println("2. Scroll")
  revolver.scroll()
  printDrum(revolver)
  println("3. Shoot")
  revolver.shoot()
  revolver.shoot()
  revolver.shoot()
  revolver.shoot()
  printDrum(revolver)
  println("4. Supply collection")
  val bullet5 = TwentyTwo()
  val bullet6 = TwentyTwo()
  val bullet7 = TwentyTwo()
  val bullet8 = TwentyTwo()
  val collection =
    mutableListOf<TwentyTwo?>(TwentyTwo(), TwentyTwo(), TwentyTwo(), TwentyTwo(), bullet5, bullet6, bullet7, bullet8)
  println("Before:")
  println("Supply collection: $collection\n")
  printDrum(revolver)
  revolver.loadMany(collection)
  println("After add operation performed:")
  println("Supply collection: $collection\n")
  printDrum(revolver)
  println("5. Extraction")
  val extractedList = revolver.quickDraw()
  println("The extracted list: $extractedList")
  println("size: ${extractedList.size}\n")
  printDrum(revolver)
  println("size: ${revolver.size()}\n")
  println("6. Supply collection 2")
  println("Before:")
  println("Supply collection: $collection\n")
  printDrum(revolver)
  revolver.loadMany(collection)
  println("After add operation performed:")
  println("Supply collection: $collection\n")
  printDrum(revolver)
  println("7. Equals")
  printDrum(revolver)
  val revolver2 = Revolver<TwentyTwo>()
  revolver2.load(bullet5)
  revolver2.load(bullet6)
  revolver2.load(bullet7)
  revolver2.load(bullet8)
  revolver2.scroll()
  printDrum(revolver2, "Revolver2<TwentyTwo>")
  println(if (revolver == revolver2) "equals" else "not equals")
}